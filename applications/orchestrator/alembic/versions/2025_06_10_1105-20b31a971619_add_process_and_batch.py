"""Add process and batch

Revision ID: 20b31a971619
Revises:
Create Date: 2025-06-10 11:05:04.688499+00:00

"""

from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "20b31a971619"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum(
        "CREATED",
        "STANDARDIZING",
        "SEARCHING",
        "MATCHING",
        "SAVING",
        "COMPLETED",
        "FAILED",
        name="processstatus",
    ).create(op.get_bind())
    op.create_table(
        "batches",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("document_id", sa.Uuid(), nullable=False),
        sa.Column("uploaded_by", sa.Uuid(), nullable=False),
        sa.Column("is_cancelled", sa.Boolean(), nullable=False),
        sa.Column("error", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_batches")),
    )
    op.create_table(
        "processes",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("batch_id", sa.Uuid(), nullable=False),
        sa.Column(
            "status",
            postgresql.ENUM(
                "CREATED",
                "STANDARDIZING",
                "SEARCHING",
                "MATCHING",
                "SAVING",
                "COMPLETED",
                "FAILED",
                name="processstatus",
                create_type=False,
            ),
            nullable=False,
        ),
        sa.Column("input_source", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("input_normalized", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("candidates_result", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("candidates_output", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("entity_match", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("errors", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["batch_id"], ["batches.id"], name=op.f("fk_processes_batch_id_batches")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_processes")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("processes")
    op.drop_table("batches")
    sa.Enum(
        "CREATED",
        "STANDARDIZING",
        "SEARCHING",
        "MATCHING",
        "SAVING",
        "COMPLETED",
        "FAILED",
        name="processstatus",
    ).drop(op.get_bind())
    # ### end Alembic commands ###
